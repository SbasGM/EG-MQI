#Agregar el directorio de trabajo ¡CAMBIAR A DONDE TENGAN ALMACENADOS LOS DATOS!
setwd("~/OneDrive/Trabajo/UAM/workspace/MQI")
#Cargar las librerias necesarias
#Conexiones a SQLite
library(RSQLite)
library(DBI)
#Cálculos estadistícos y matemáticos
library(pastecs)
library(tidyr)
library(psych)
library(MASS)
library(dplyr)
#Conexión a la base de datos sqlite que esta dentro del GeoPackage
con <- dbConnect(RSQLite::SQLite(),dbname = "datosMQI_recuUAM.gpkg",":memory:")
#Definimos la variable que alojará los datos de la poblacián por municipio del censo de 2010
pobMunOax10 <- dbGetQuery(con,"SELECT pobtot2010  FROM oax_pobtotmun")
#Agregar el directorio de trabajo ¡CAMBIAR A DONDE TENGAN ALMACENADOS LOS DATOS!
setwd("~/OneDrive/Trabajo/UAM/workspace/MQI")
#Cargar las librerias necesarias
#Conexiones a SQLite
library(RSQLite)
library(DBI)
#Cálculos estadistícos y matemáticos
library(pastecs)
library(tidyr)
library(psych)
library(MASS)
library(dplyr)
#Conexión a la base de datos sqlite que esta dentro del GeoPackage
con <- dbConnect(RSQLite::SQLite(),dbname = "datosMQI_recuUAM.gpkg", ":memory:")
#Definimos la variable que alojará los datos de la poblacián por municipio del censo de 2010
pobMunOax10 <- dbGetQuery(con,"SELECT pobtot2010  FROM oax_pobtotmun")
#Definimos la variable que alojará los datos de la población por municipio del censo de 2010
pobMunOax20 <- dbGetQuery(con,"SELECT pobtot2020 FROM oax_pobtotmun")
#Visualizamos los datos para ver si estos son correctos o no.
head(pobMunOax10)
head(pobMunOax20)
#Llamamos a la función summary() para calcular los valores de la población total por municipio en 2010.
summary(pobMunOax10)
#Llamamos a la función summary() para calcular los valores de la población total por municipio en 2020.
summary(pobMunOax20)
#Histograma de distribución de la tabla población total por municipio en 2010
hist(x = pobMunOax10$pobtot2010, main = "Población por Municipio en Oaxaca 2010",
xlab = "Población", ylab = "Frecuencia",
col = "blue")
#Histograma de distribución de la tabla población total por municipio en 2020
hist(x = pobMunOax20$pobtot2020, main = "Población por Municipio en Oaxaca 2020",
xlab = "Población", ylab = "Frecuencia",
col = "black")
#Definimos las varibles del área de los poligonos urbanos de 2010
areaUrb10 <- dbGetQuery(con,"SELECT cve_mun, SUM(area_ha) AS area_ha FROM area_urb2010 GROUP BY cve_mun")
#Definimos las varibles del área de los poligonos urbanos de 2010
areaUrb20 <- dbGetQuery(con,"SELECT cve_mun, SUM(area_ha) AS area_ha FROM area_urb2020 GROUP BY cve_mun")
#Visualizamos los datos para ver si estos son correctos o no.
areaUrb10
areaUrb20
#Llamamos a la función summary() para calcular los valores del área urbana total por municipio en 2020.
summary(areaUrb10)
#Llamamos a la función summary() para calcular los valores del área urbana total por municipio en 2020.
summary(areaUrb20)
#Histograma de distribución de la tabla área urbana total por municipio en Oaxaca en 2010
hist(x = areaUrb10$area_ha, main = "Área Urbana por municipio en Oaxaca en 2010",
xlab = "Área Urbana (Ha)", ylab = "Frecuencia",
col = "blue")
#Histograma de distribución de la tabla área urbana total por municipio en Oaxaca en 2020
hist(x = areaUrb20$area_ha, main = "Área Urbana por municipio en Oaxaca en 2020",
xlab = "Área Urbana (Ha)", ylab = "Frecuencia",
col = "black")
#Creación de un dataframe que una todas la variables que necesitamos para hacer la tabla de distribución
tablaCor <- dbGetQuery(con,"SELECT cve_mun, difpob_porc, difareaurb_porc FROM regredatos")
#Vizualizamos la tabla para ver su estructura
head(tablaCor)
#Llamamos a la función 'stat.desc(mydata)' para calcular los valores de la tabla que contiene los datos para la comprovar la hipotesis de correlacion entre variables.
stat.desc(tablaCor)
#Histograma de frecuencias y configuración
hist(x = tablaCor$difpob_porc, main = "Cambio en el % de población por municipio en Oaxaca respecto al 2010",
xlab = "Cambio % población", ylab = "Frecuencia",
col = "blue")
#Histograma de frecuencias y configuración
hist(x = tablaCor$difareaurb_porc, main = "Cambio en el % área urbana por municipio en Oaxaca respecto al 2010",
xlab = "Cambio % área urbana(ha)", ylab = "Frecuencia",
col = "black")
#Grafico de boxplot y configuración
boxplot(x = tablaCor$difpob_porc,
xlab = "Cambio % en poblacion", ylab = "Porcentage",
col = "orange",
main = "Cambio % de población por Municipio con respecto al 2010",
horizontal = TRUE
)
#Grafico de boxplot y configuración
boxplot(x = tablaCor$difareaurb_porc,
xlab = "Cambio % area urbana (Ha)", ylab = "Porcentage",
col = "green",
main = "Cambio % del area urbana por municipio con respecto al 2010",
horizontal = TRUE
)
#Diagrama de dispersion y configuración
plot(x=tablaCor$difpob_porc, y=tablaCor$difareaurb_porc,
xlab = "Cambio % en población", ylab = "Cambio % area urbana (Ha)",
col = "red",
main = "Relación entre las variables por municipio en Oaxaca")
#Usamos la función summary para ver los rangos en los que se situan los valores atípicos
summary(tablaCor)
#Cuartiles y rango intencuartilico de la variable difpob_porc
pobQ1 <- -3.107
pobQ3 <- 10.824
pobRI <- pobQ3-pobQ1
#Definicion de las variables que delimitan el rango de para detectar los valores atipicos extremos de difpob_porc
pobMinVal <- pobQ1-1.5*pobRI
pobMaxVal <- pobQ3+1.5*pobRI
#Cuartiles y rango intencuartilico de la variable difareaurb_porc
aUrbQ1 <- 0.004
aUrbQ3 <-15.323
aUrbRI <- pobQ3-pobQ1
#Definicion de las variables que delimitan el rango de para detectar los valores atipicos extremos de difareaurb_porc
aUrbMinVal = aUrbQ1-1.5*aUrbRI
aUrbMaxVal = aUrbQ3+1.5*aUrbRI
#Rango máximo y minimo para la variable de cambio el % de pobación
pobMaxVal
pobMinVal
pobRI
#Rango máximo y minimo para la variable de cambio el % de area urbana
aUrbMaxVal
aUrbMinVal
aUrbRI
#Eliminar los outliners de la nuestro data frame.
#Eliminamos los datos que estan en el rango de los valores atipicos leves y extremos del campo de difpob_porc
datosReg1 = subset(tablaCor, difpob_porc>pobMinVal & difpob_porc<pobMaxVal)
datosReg = subset(datosReg1, difareaurb_porc>aUrbMinVal & difareaurb_porc<aUrbMaxVal)
#Vizualizamos el DataFrame para ver que contengo los datos necesarios
head(datosReg)
#Vizualizacion de los valores de estadisticos descriptivos basicos del nuevo DataFrame
summary(datosReg)
#Grafico de boxplot y configuración
boxplot(x = datosReg$difpob_porc,
xlab = "Cambio % en poblacion", ylab = "Porcentage",
col = "grey",
main = "Cambio % de población por Municipio con respecto al 2010",
horizontal = TRUE
)
#Grafico de boxplot y configuración
boxplot(x = datosReg$difareaurb_porc,
xlab = "Cambio % area urbana (Ha)", ylab = "Porcentage",
col = "red",
main = "Cambio % del area urbana por municipio con respecto al 2010",
horizontal = TRUE
)
#Histograma de frecuencias y configuración
hist(x = datosReg$difpob_porc, main = "Cambio en la población por municipio en Oaxaca respecto al 2010",
xlab = "Cambio % población", ylab = "Frecuencia",
col = "blue"
)
#Histograma de frecuencias y configuración
hist(x = datosReg$difareaurb_porc, main = "Cambio en el área urbana por municipio en Oaxaca respecto al 2010",
xlab = "Cambio % área urbana(ha)", ylab = "Frecuencia",
col = "black"
)
#Diagrama de dispersion y configuración
plot(x=datosReg$difpob_porc, y=datosReg$difareaurb_porc,
xlab = "Cambio % en población", ylab = "Cambio % área urbana (Ha)",
col = "red",
main = "Relación entre las variables por municipio en Oaxaca"
)
#Eliminamos la primera columna para hacer el nuevo gráfico
datosCoef <- select(datosReg,difpob_porc, difareaurb_porc)
#Coeficiente de correlación
pairs.panels(datosCoef)
#Uso de la función cor de la libreria MASS
cor(x = datosReg$difpob_porc, y = datosReg$difareaurb_porc)
#Regresión lineal en R
?lm
modelo <- lm(datosReg$difareaurb_porc~datosReg$difpob_porc)
#Vizualización de los datos del modelo
summary(modelo)
modelo$coefficients
#Calcular el error cuadratico medio o MSE
modeloMSE <- mean(modelo$residuals^2)
modeloMSE
#Calcular la raíz del error cuadratico medio o RMSE
modeloRMSE <- sqrt(modeloMSE)
modeloRMSE
#Visualización de la línea de regresión lineal en nuestro diagrama de disperción
plot(datosReg$difareaurb_porc~datosReg$difpob_porc,
xlab = "Cambio % en población", ylab = "Cambio % área urbana (Ha)",
col = "grey",
main = "Modelo de regresión Lineal")
abline(modelo, col= 'black' )
#Definimos las varibles del área de los poligonos urbanos de 2010
areaUrb10 <- dbGetQuery(con,"SELECT cve_mun, SUM(area_ha) AS area_ha FROM area_urb2010 GROUP BY cve_mun")
#Definimos las varibles del área de los poligonos urbanos de 2010
areaUrb20 <- dbGetQuery(con,"SELECT cve_mun, SUM(area_ha) AS area_ha FROM area_urb2020 GROUP BY cve_mun")
#Visualizamos los datos para ver si estos son correctos o no.
head(areaUrb10)
head(areaUrb20)
knit_with_parameters('~/OneDrive/Trabajo/UAM/workspace/MQI/Rmarckdown/RecuperacionMQI_R.Rmd')
